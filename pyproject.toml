[project]
name = "testmtm"
version = "0.5.57"
description = "A web scraping library based on LangChain which uses LLM and direct graph logic to create scraping pipelines."
authors = [
    { name = "Marco Vinciguerra", email = "mvincig11@gmail.com" },
]
dependencies = [
    "litellm>=1.56.5",
    "python-dotenv>=1.0.0",
    "langchain>=0.3.0",
    "langchain-google-genai>=1.0.7",
    "langchain-openai>=0.1.22",
    "langchain-mistralai>=0.1.12",
    "langchain_community>=0.2.9",
    "langchain-aws>=0.1.3",
    "html2text>=2024.2.26",
    "beautifulsoup4>=4.12.3",
    "pandas>=2.2.2",
    "python-dotenv>=1.0.1",
    "tiktoken>=0.7",
    "tqdm>=4.66.4",
    "minify-html>=0.15.0",
    "free-proxy>=1.1.1",
    "playwright>=1.43.0",
    "undetected-playwright>=0.3.0",
    "langchain-ollama>=0.1.3",
    "qdrant-client>=1.11.3",
    "fastembed>=0.3.6",
    "semchunk>=2.2.0",
    "transformers>=4.44.2",
    "transformers>=4.44.2",
    "googlesearch-python>=1.2.5",
    "async-timeout>=4.0.3",
    "transformers>=4.44.2",
    "googlesearch-python>=1.2.5",
    "simpleeval>=1.0.0",
    "async_timeout>=4.0.3",
    "scrapegraph-py>=1.7.0",
    "fastapi>=0.115.6",
    "scrapegraphai>=1.33.3",
    "crewai>=0.86.0",
    "structlog>=24.4.0",
    "langgraph>=0.2.60",
    "langgraph-checkpoint-postgres>=2.0.9",
    "lazify>=0.4.0",
    # docling 这个库,依赖项很庞大.其中有torch接近1G体积
    # "docling>=2.14.0",
    "orjson>=3.10.1",
    "sqlmodel>=0.0.22",
    "mtmaisdk",
    "nanoid>=2.0.0",
]

license = "MIT"
readme = "README.md"
homepage = "https://scrapegraphai.com/"
repository = "https://github.com/ScrapeGraphAI/Scrapegraph-ai"
documentation = "https://scrapegraph-ai.readthedocs.io/en/latest/"
keywords = [
    "scrapegraph",
    "llm"
]
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
requires-python = ">=3.10,<4.0"

[project.optional-dependencies]
burr = ["burr[start]==0.22.1"]
docs = ["sphinx==6.0", "furo==2024.5.6"]

# Group 1: Other Language Models
other-language-models = [
    "langchain-google-vertexai>=1.0.7",
    "langchain-fireworks>=0.1.3",
    "langchain-groq>=0.1.3",
    "langchain-anthropic>=0.1.11",
    "langchain-huggingface>=0.0.3",
    "langchain-nvidia-ai-endpoints>=0.1.6",
    "langchain_together>=0.2.0"
]

# Group 2: More Semantic Options
more-semantic-options = [
    "graphviz>=0.20.3",
]

# Group 3: More Browser Options
more-browser-options = [
    "browserbase>=0.3.0",
]

# Group 4: Surya Library
screenshot_scraper = [
    "surya-ocr>=0.5.0",
    "matplotlib>=3.7.2",
    "ipywidgets>=8.1.0",
    "pillow>=10.4.0",
]

[build-system]
requires = ["hatchling>=1.0.0", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.build]
packages = ["mtmai"]
exclude = [
    "tests/**",
    "examples/**",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "mtmai/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["mtmai"]

[tool.hatch.build.targets.sdist]
include = [
    "mtmai",
    "pyproject.toml",
    "README.md",
    "LICENSE",
]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
dev = [
    "burr[start]==0.22.1",
    "sphinx==6.0",
    "furo==2024.5.6",
]

[tool.uv]
dev-dependencies = [
    "poethepoet>=0.31.1",
    "pytest==8.0.0",
    "pytest-mock==3.14.0",
    "pylint>=3.2.5",
]
# 明确使用跟目录下的venv,否则在子项目安装依赖时会在子项目目录下创建venv
# venv-path = "../../.venv"

# [tool.poe.tasks]
# pylint-local = "pylint scraperaphai/**/*.py"
# pylint-ci = "pylint --disable=C0114,C0115,C0116 --exit-zero scrapegraphai/**/*.py"


[tool.uv.sources]




# [tool.setuptools]
# package-dir = {"" = "src"}
# packages = ["mtmai"]

    # [tool.pytest.ini_options]
    # pythonpath = ["src"]